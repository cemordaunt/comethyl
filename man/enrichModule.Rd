% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Investigate_Functional_Enrichments.R
\name{enrichModule}
\alias{enrichModule}
\title{Analyze Module Functional Enrichment with GREAT}
\usage{
enrichModule(
  regions,
  module = NULL,
  genome = c("hg38", "hg19", "hg18", "mm10", "mm9", "danRer7"),
  includeCuratedRegDoms = FALSE,
  rule = c("basalPlusExt", "twoClosest", "oneClosest"),
  adv_upstream = 5,
  adv_downstream = 1,
  adv_span = 1000,
  adv_twoDistance = 1000,
  adv_oneDistance = 1000,
  version = c("4.0.4", "3.0.0", "2.0.2"),
  ontologies = c("GO Molecular Function", "GO Biological Process",
    "GO Cellular Component", "Mouse Phenotype", "Human Phenotype"),
  min_background_region_hits = 5,
  adjMethod = c("fdr", "holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "none"),
  min_region_hits = 2,
  pvalue_threshold = 0.01,
  save = TRUE,
  file = "Module_Enrichment_Results.txt",
  verbose = TRUE
)
}
\arguments{
\item{regions}{A \code{data.frame} of regions with module assignments,
typically obtained from \code{\link[=getModules]{getModules()}}.}

\item{module}{A \code{character} giving the name of one or more modules to
analyze functional enrichment. If null, all modules will be analyzed,
except the grey (unassigned) module.}

\item{genome}{A \code{character(1)} giving the genome build for the regions.
Supported genomes include \code{hg38}, \code{hg19}, \code{hg18},
\code{mm10}, \code{mm9}, and \code{danRer7}. See \code{Details}.}

\item{includeCuratedRegDoms}{A \code{logical(1)} indicating whether to include
curated regulatory domains for GREAT gene annotation.}

\item{rule}{A \code{character(1)} specifying the rule used by GREAT for gene
annotation. Possible values include \code{basalPlusExt},
\code{twoClosest}, and \code{oneClosest}. See \code{\link[rGREAT:submitGreatJob]{rGREAT::submitGreatJob()}}
for more details for this and the next six arguments.}

\item{adv_upstream}{A \code{numeric(1)} giving the distance upstream of the
TSS (in kb) to define a basal regulatory domain in the
\code{basalPlusExt} rule.}

\item{adv_downstream}{A \code{numeric(1)} giving the distance downstream of
the TSS (in kb) to define a basal regulatory domain in the
\code{basalPlusExt} rule.}

\item{adv_span}{A \code{numeric(1)} specifying the distance upstream and
downstream of the TSS (in kb) to define the maximum extension of the
regulatory domain in the \code{basalPlusExt} rule.}

\item{adv_twoDistance}{A \code{numeric(1)} giving the distance upstream and
downstream of the TSS (in kb) to define the maximum extension of the
regulatory domain in the \code{twoClosest} rule.}

\item{adv_oneDistance}{A \code{numeric(1)} giving the distance upstream and
downstream of the TSS (in kb) to define the maximum extension of the
regulatory domain in the \code{oneClosest} rule.}

\item{version}{A \code{character(1)} specifying the version of GREAT to use
for gene annotation. Possible values include \code{4.0.4},
\code{3.0.0}, and \code{2.0.2}. Different versions of GREAT support
different genomes. See \code{Details}.}

\item{ontologies}{A \code{character} giving the ontology databases to query.
Default ontologies include \code{GO Molecular Function},
\code{GO Biological Process}, \code{GO Cellular Component},
\code{Mouse Phenotype}, and \code{Human Phenotype}. All possible
ontologies can be obtained with \code{\link[=listOntologies]{listOntologies()}}.}

\item{min_background_region_hits}{A \code{numeric(1)} giving the minimum
number of overlaps of gene set regulatory domains with background
regions to include that gene set in the results. This affects the
results used when adjusting p-values for multiple comparisons.}

\item{adjMethod}{A \code{character(1)} specifying the method for adjusting
p-values, Potential values include \code{fdr}, \code{holm},
\code{hochberg}, \code{hommel}, \code{bonferroni}, \code{BH},
\code{BY}, and \code{none}.}

\item{min_region_hits}{A \code{numeric(1)} giving the minimum number of
overlaps of gene set regulatory domains with module regions to
include that gene set in the results.}

\item{pvalue_threshold}{A \code{numeric(1)} giving the maximum p-value
for enrichment to include a gene set in the results.}

\item{save}{A \code{logical(1)} indicating whether to save the
\code{data.frame}.}

\item{file}{A \code{character(1)} giving the file name (.txt) for the saved
\code{data.frame}.}

\item{verbose}{A \code{logical(1)} indicating whether messages should be
printed.}
}
\value{
A \code{data.frame} of functional enrichment results.
}
\description{
\code{enrichModule()} takes a \code{data.frame} of regions with module
assignments, filters it for the module(s) of interest, and submits it to
GREAT for functional enrichment analysis compared to gene sets in the
specified ontologies. The results are then processed and saved as a .txt file.
}
\details{
Submission to GREAT is performed by the \pkg{rGREAT} package, which allows
for different annotation rules and versions of GREAT. The default
\code{basalPlusExt} annotation rule associates a gene with a region if the
region is within the basal regulatory domain of the gene (5 kb upstream and 1
kb downstream of the TSS) or if it is within 1 Mb upstream or downstream of
the TSS and not in the basal regulatory domain of another gene. Other rules
include \code{twoClosest} and \code{oneClosest}, which effectively assign the
two nearest genes or one nearest genes, respectively. See
\code{\link[rGREAT:submitGreatJob]{rGREAT::submitGreatJob()}} for more details.

GREAT supports different genomes depending on the version:
\describe{
\item{GREAT v4.0.4}{\code{hg38}, \code{hg19}, \code{mm10}, \code{mm9}}
\item{GREAT v3.0.0}{\code{hg19}, \code{mm10}, \code{mm9}, \code{danRer7}}
\item{GREAT v2.0.2}{\code{hg19}, \code{hg18}, \code{mm9}, \code{danRer7}}
}

Functional enrichment analysis is performed for regions in the module(s) of
interest relative to the background set of all regions in \code{regions},
including the grey (unassigned) module. These regions are compared for overlap
with the regulatory domains of genes annotated to functional gene sets of the
ontologies of interest. The default ontologies include
\code{GO Molecular Function}, \code{GO Biological Process},
\code{GO Cellular Component}, \code{Mouse Phenotype}, and
\code{Human Phenotype}. Initial enrichment results are filtered for terms
with a minimum number of overlaps with the background set of regions,
p-values are adjusted for multiple comparisons using the specified method,
and then the results are filtered again for a minimum number of overlaps with
the module(s) of interest and a p-value threshold. Finally, gene symbols are
obtained for the significant gene sets, and the result is saved as a .txt
file.
}
\examples{
\dontrun{

# Get Comethylation Modules
modules <- getModules(methAdj, power = sft$powerEstimate, regions = regions,
                      corType = "pearson", file = "Modules.rds")

# Annotate Modules
regionsAnno <- annotateModule(regions, module = "bisque4",
                              genome = "hg38",
                              file = "Annotated_bisque4_Module_Regions.txt")
geneList_bisque4 <- getGeneList(regionsAnno, module = "bisque4")

# Analyze Functional Enrichment
ontologies <- listOntologies("hg38", version = "4.0.4")
enrich_bisque4 <- enrichModule(regions, module = "bisque4",
                               genome = "hg38",
                               file = "bisque4_Module_Enrichment.txt")
plotEnrichment(enrich_bisque4,
               file = "bisque4_Module_Enrichment_Plot.pdf")
}

}
\seealso{
\itemize{
\item \code{\link[=getModules]{getModules()}} to build a comethylation network and identify
modules of comethylated regions.
\item \code{\link[=annotateModule]{annotateModule()}} and \code{\link[=getGeneList]{getGeneList()}} to annotate a set of
regions with genes and regulatory context and then extract
the gene symbols or IDs.
\item \code{\link[=listOntologies]{listOntologies()}} and \code{\link[=plotEnrichment]{plotEnrichment()}} to investigate
functional enrichment of module regions with GREAT.
}
}
