% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Build_Comethylation_Network.R
\name{getModules}
\alias{getModules}
\title{Identify Modules of Comethylated Regions}
\usage{
getModules(
  meth,
  power,
  regions,
  maxBlockSize = 40000,
  corType = c("pearson", "bicor"),
  maxPOutliers = 0.1,
  deepSplit = 4,
  minModuleSize = 10,
  mergeCutHeight = 0.1,
  nThreads = 4,
  save = TRUE,
  file = "Modules.rds",
  verbose = TRUE
)
}
\arguments{
\item{meth}{A \code{numeric matrix}, where each row is a sample and each
column is a region. This is typically obtained from
\code{\link{adjustRegionMeth()}}.}

\item{power}{A \code{numeric(1)} giving the soft-thresholding power. This is
typically obtained from \code{\link{getSoftPower()}}.}

\item{regions}{A \code{data.frame} of regions, typically after filtering with
\code{\link{filterRegions()}}. Must have the column \code{RegionID}
and correspond to the regions in \code{meth}.}

\item{maxBlockSize}{A \code{numeric(1)} specifying the maximum number of
regions in a block. If there are more than this number regions, then
regions are pre-clustered into blocks using projective K-means
clustering. Decrease this if memory is insufficient.}

\item{corType}{A \code{character(1)} indicating which correlation statistic
to use in the adjacency calculation.}

\item{maxPOutliers}{A \code{numeric(1)} specifying the maximum percentile that
can be considered outliers on each side of the median for the
\code{bicor} statistic.}

\item{deepSplit}{A \code{numeric(1)} specifying the sensitivity for module
detection. Possible values are integers 0 to 4, with 4 having the
highest sensitivity.}

\item{minModuleSize}{A \code{numeric(1)} giving the minimum number of regions
to qualify as a module.}

\item{mergeCutHeight}{A \code{numeric(1)} specifying the cut height for
merging correlated modules. Value is the maximum dissimilarity
(1 - correlation) and ranges from 0 to 1.}

\item{nThreads}{A \code{numeric(1)} indicating the number of threads for
correlation calculations.}

\item{save}{A \code{logical(1)} indicating whether to save the \code{list}.}

\item{file}{A \code{character(1)} giving the file name (.rds) for the saved
\code{list}.}

\item{verbose}{A \code{logical(1)} indicating whether messages should be
printed.}
}
\value{
A \code{list} with 11 elements. See \code{\link[WGCNA]{blockwiseModules()}}
for a description of these. Additional \code{regions} element is a
\code{data.frame} with the region locations, statistics, module
assignment, module membership, and hub region status.
}
\description{
\code{getModules()} builds a comethylation network, identifies comethylated
modules, outputs a \code{list} with region module assignments, eigennode
values, dendrograms, and module membership, and then saves this as a .rds file.
}
\details{
Comethylation networks are built and modules are identified by
\code{\link[WGCNA]{blockwiseModules()}}, with \code{corType} set to either
\code{pearson} or \code{bicor}. Calculations are performed for a signed network
in blocks of regions of maximum size \code{maxBlockSize} (default = 40000).
If there are more than \code{maxBlocksize} regions, then regions are
pre-clustered into blocks using projective K-means clustering. Region
correlations are performed within each block and regions are clustered with
average linkage hierarchical clustering. Modules are then identified with a
dynamic hybrid tree cut and highly correlated modules are merged together.
More information is given in the \code{WGCNA} package documentation for
\code{\link[WGCNA]{blockwiseModules()}}.
}
\examples{
\dontrun{

# Get Methylation Data
meth <- getRegionMeth(regions, bs = bs, file = "Region_Methylation.rds")

# Adjust Methylation Data for PCs
mod <- model.matrix(~1, data = pData(bs))
methAdj <- adjustRegionMeth(meth, mod = mod,
                            file = "Adjusted_Region_Methylation.rds")

# Select Soft Power Threshold
sft <- getSoftPower(methAdj, corType = "pearson", file = "Soft_Power.rds")
plotSoftPower(sft, file = "Soft_Power_Plots.pdf")

# Get Comethylation Modules
modules <- getModules(methAdj, power = sft$powerEstimate, regions = regions,
                      corType = "pearson", file = "Modules.rds")

# Visualize Comethylation Modules
plotRegionDendro(modules, file = "Region_Dendrograms.pdf")
BED <- getModuleBED(modules$regions, file = "Modules.bed")
}

}
\seealso{
\itemize{
\item \code{\link{getRegionMeth()}} and \code{\link{adjustRegionMeth()}}
to extract methylation data and then adjust it for the top
principal components.
\item \code{\link{getSoftPower()}} and \code{\link{plotSoftPower()}}
to estimate the best soft-thresholding power and visualize
scale-free topology fit and connectivity.
\item \code{\link{plotRegionDendro()}} and \code{\link{getModuleBED()}}
to visualize region similarity, genomic locations, and
module assignments.
}
}
